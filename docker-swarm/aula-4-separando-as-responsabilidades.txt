Separando as responsabilidades

Readicionando um manager

docker node demote vm1

docker node rm vm1

docker swarm join-token manager
 
docker swarm join --token SWMTKN-1-5g4eb93c6rn2odhm3gaqr7lmvifcp6gmqhf31a97kanhj9wq6p-4ilk33wd79udue38sowonzff9 192.168.99.101:2377 --advertise-addr 192.168.99.100

-----------------------------------------------------------

Removendo managers

Removemos um nó manager do swarm a partir de outro manager.
Quais os procedimentos que devemos executar para realizar essa remoção?

Devemos primeiramente rebaixar o cargo do nó com o comando docker node demote e depois removê-lo com o comando docker node rm.
É necessário transformar o nó manager em worker e depois remover.

------------------------------------------------------------

Restringindo nós

Atualizando nó
docker node update --availability drain vm2

docker node update --availability active vm2

docker node update --availability drain
O nó ficará indisponível para executar tarefas.
Com a disponibilidade em drain, não conseguiremos executar mais tarefas/containers nesse nó.

-----------------------------------------------------------

Restringindo serviços

docker service update --constraint-add node.role==worker 2jh0vuwv4qbk

restringe o comportamento para um serviço ser rodado apenas em nós workers

-----------------------------------------------------------

Podemos impor outros tipos de restrições, como id, hostname e o próprio role

Caso quiséssemos restringir o serviço de id ci10k3u7q6ti para funcionar 
apenas em um nó com id t76gee19fjs8, poderíamos utilizar o comando:

docker service update --constraint-add node.id==t76gee19fjs8 ci10k3u7q6ti

Se o objetivo fosse fazer o serviço rodar apenas em nossa vm4 por exemplo,
uma possibilidade seria utilizar:

docker service update --constraint-add node.hostname==vm4 ci10k3u7q6ti

podemos também remover restrições criadas utilizando o comando de atualização passando a flag --constraint-rm. 
Para remover as duas restrições anteriores:

docker service update --constraint-rm node.id==t76gee19fjs8 ci10k3u7q6ti

docker service update --constraint-rm node.hostname==vm4 ci10k3u7q6ti

-----------------------------------------------------------







